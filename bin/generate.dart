import 'dart:async' as async;
import 'dart:convert' as convert;
import 'dart:io' as io;

final Map<String, Set<Type>> generate = {
	'async': {
		async.AsyncError,
		async.DeferredLibrary,
		async.DeferredLoadException,
		async.Future,
		async.TimeoutException,
		async.Completer,
		async.Stream,
		async.StreamSubscription,
		async.EventSink,
		async.StreamView,
		async.StreamConsumer,
		async.StreamSink,
		async.StreamTransformer,
		async.StreamTransformerBase,
		async.StreamIterator,
		async.MultiStreamController,
		async.StreamController,
		async.SynchronousStreamController,
		async.Timer,
		async.ZoneSpecification,
		async.ZoneDelegate,
		async.Zone,
	},
	'convert': {
		convert.AsciiCodec,
		convert.AsciiEncoder,
		convert.AsciiDecoder,
		convert.Base64Codec,
		convert.Base64Encoder,
		convert.Base64Decoder,
		convert.ByteConversionSink,
		convert.ByteConversionSinkBase,
		convert.ChunkedConversionSink,
		convert.Codec,
		convert.Converter,
		convert.Encoding,
		convert.HtmlEscapeMode,
		convert.HtmlEscape,
		convert.JsonUnsupportedObjectError,
		convert.JsonCyclicError,
		convert.JsonCodec,
		convert.JsonEncoder,
		convert.JsonUtf8Encoder,
		convert.JsonDecoder,
		convert.Latin1Codec,
		convert.Latin1Encoder,
		convert.Latin1Decoder,
		convert.LineSplitter,
		convert.StringConversionSink,
		convert.ClosableStringSink,
		convert.StringConversionSinkBase,
		convert.StringConversionSinkMixin,
		convert.Utf8Codec,
		convert.Utf8Encoder,
		convert.Utf8Decoder,
	},
	'io': {
		io.IOException,
		io.OSError,
		io.ZLibOption,
		io.ZLibCodec,
		io.GZipCodec,
		io.ZLibEncoder,
		io.ZLibDecoder,
		io.RawZLibFilter,
		io.Directory,
		io.FileMode,
		io.FileLock,
		io.File,
		io.RandomAccessFile,
		io.FileSystemException,
		io.FileSystemEntityType,
		io.FileStat,
		io.FileSystemEntity,
		io.FileSystemEvent,
		io.FileSystemCreateEvent,
		io.FileSystemModifyEvent,
		io.FileSystemDeleteEvent,
		io.FileSystemMoveEvent,
		io.IOSink,
		io.Link,
		io.IOOverrides,
		io.Platform,
		io.ProcessInfo,
		io.ProcessStartMode,
		io.Process,
		io.ProcessResult,
		io.ProcessSignal,
		io.SignalException,
		io.ProcessException,
		io.SecureServerSocket,
		io.RawSecureServerSocket,
		io.SecureSocket,
		io.RawSecureSocket,
		io.X509Certificate,
		io.TlsException,
		io.HandshakeException,
		io.CertificateException,
		io.SecurityContext,
		io.InternetAddressType,
		io.InternetAddress,
		io.NetworkInterface,
		io.RawServerSocket,
		io.ServerSocket,
		io.SocketDirection,
		io.SocketOption,
		io.RawSocketOption,
		io.RawSocketEvent,
		io.ConnectionTask,
		io.RawSocket,
		io.Socket,
		io.Datagram,
		io.ResourceHandle,
		io.SocketControlMessage,
		io.SocketMessage,
		io.RawDatagramSocket,
		io.SocketException,
		io.Stdin,
		io.Stdout,
		io.StdoutException,
		io.StdinException,
		io.StdioType,
		io.SystemEncoding,
		io.RawSynchronousSocket,
	},
	'http': {
		io.HttpServer,
		io.HttpConnectionsInfo,
		io.HttpHeaders,
		io.HeaderValue,
		io.HttpSession,
		io.ContentType,
		io.Cookie,
		io.HttpRequest,
		io.HttpResponse,
		io.HttpClient,
		io.HttpClientRequest,
		io.HttpClientResponse,
		io.HttpClientCredentials,
		io.HttpClientBasicCredentials,
		io.HttpClientDigestCredentials,
		io.HttpConnectionInfo,
		io.RedirectInfo,
		io.HttpException,
		io.RedirectException,
	},
};
